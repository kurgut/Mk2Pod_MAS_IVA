
// Various patches to tweak MAS props specifically for this internal, minor changes.

// Fix MAS_tggl_UNDOCK_T1-G3-B4-C1Y-S text misaligned :::: redo later
// @PROP[MAS_tggl_UNDOCK_T1-G3-B4-C1Y-S]
// {
	// @MODULE[MASComponent]
	// {
		// @TEXT_LABEL
		// {
			// %transformOffset = 0, 0
		// }
	// }
// }

// Fix MAS_tggl_ABORT_T1-G3-B15-C1Y-S text misaligned, make like MAS_tggl_STAGE_T1-G3-B15-C1Y-S_APEx, which is correct
@PROP[MAS_tggl_ABORT_T1-G3-B15-C1Y-S]
{
	@MODULE[MASComponent]
	{
		@TEXT_LABEL
		{
			%transformOffset = 0.02526,-0.008
		}
		@TEXT_LABEL
		{
			%transformOffset = 0.02526,-0.008
		}
	}
}
// MAS_DigitalIndicator_3char Text labels title size and position tweaks
@PROP[MAS_DigitalIndicator_ThrottleLimit]
{
	@MODULE[MASComponent]
	{
		@TEXT_LABEL
		{
			@fontSize = 5.5 // old = 6
			%transformOffset = 0, -0.003
		}
	}
}
@PROP[MAS_DigitalIndicator_GimbalLimit]
{
	@MODULE[MASComponent]
	{
		@TEXT_LABEL
		{
			@fontSize = 5.5 // old = 6
			%transformOffset = 0, -0.003
		}	
	}
}



// ------------------ FIX switch toggles modular COLOR_SHIFT nodes throwing errors, and the TumblerMarkObj not lighting ingame :

@PROP[MAS_Switch_v1_AG*]
{
	@MODULE[MASComponent]
	{
		@COLOR_SHIFT
		{
			@name = Border 1
			@transform = TumblerMarkObj
			@variable = fc.Conditioned(fc.GetPersistentAsNumber("Backlight"))
			@passiveColor = 0,0,0,255
			@activeColor = COLOR_ASET_SWITCHER_BORDER_POSITIVECOLOR
			@blend = true
		}
		COLOR_SHIFT
		{
			name = Border 2
			transform = GlowBorder
			variable = fc.Conditioned(fc.GetPersistentAsNumber("Backlight"))
			passiveColor = 0,0,0,255
			activeColor = COLOR_ASET_SWITCHER_BORDER_POSITIVECOLOR
			blend = true
		}		
	}
}
@PROP[MAS_Switch_v1_ALCOR_Cam*]
{
	@MODULE[MASComponent]
	{
		@COLOR_SHIFT
		{
			@name = Border 1
			@transform = TumblerMarkObj
			@variable = fc.Conditioned(fc.GetPersistentAsNumber("Backlight"))
			@passiveColor = 0,0,0,255
			@activeColor = COLOR_ASET_SWITCHER_BORDER_POSITIVECOLOR
			@blend = true
		}
		COLOR_SHIFT
		{
			name = Border 2
			transform = GlowBorder
			variable = fc.Conditioned(fc.GetPersistentAsNumber("Backlight"))
			passiveColor = 0,0,0,255
			activeColor = COLOR_ASET_SWITCHER_BORDER_POSITIVECOLOR
			blend = true
		}		
	}
}
@PROP[MAS_Switch_v1_ALCOR_DockingShutter]
{
	@MODULE[MASComponent]
	{
		@COLOR_SHIFT
		{
			@name = Border 1
			@transform = TumblerMarkObj
			@variable = fc.Conditioned(fc.GetPersistentAsNumber("Backlight"))
			@passiveColor = 0,0,0,255
			@activeColor = COLOR_ASET_SWITCHER_BORDER_POSITIVECOLOR
			@blend = true
		}
		COLOR_SHIFT
		{
			name = Border 2
			transform = GlowBorder
			variable = fc.Conditioned(fc.GetPersistentAsNumber("Backlight"))
			passiveColor = 0,0,0,255
			activeColor = COLOR_ASET_SWITCHER_BORDER_POSITIVECOLOR
			blend = true
		}		
	}
}
@PROP[MAS_Switch_v1_ARRT_*]
{
	@MODULE[MASComponent]
	{
		@COLOR_SHIFT
		{
			@name = Border 1
			@transform = TumblerMarkObj
			@variable = fc.Conditioned(fc.GetPersistentAsNumber("Backlight"))
			@passiveColor = 0,0,0,255
			@activeColor = COLOR_ASET_SWITCHER_BORDER_POSITIVECOLOR
			@blend = true
		}
		COLOR_SHIFT
		{
			name = Border 2
			transform = GlowBorder
			variable = fc.Conditioned(fc.GetPersistentAsNumber("Backlight"))
			passiveColor = 0,0,0,255
			activeColor = COLOR_ASET_SWITCHER_BORDER_POSITIVECOLOR
			blend = true
		}		
	}
}
@PROP[MAS_Switch_v1_AVAS_Power]
{
	@MODULE[MASComponent]
	{
		@COLOR_SHIFT
		{
			@name = Border 1
			@transform = TumblerMarkObj
			@variable = fc.Conditioned(fc.GetPersistentAsNumber("Backlight"))
			@passiveColor = 0,0,0,255
			@activeColor = COLOR_ASET_SWITCHER_BORDER_POSITIVECOLOR
			@blend = true
		}
		COLOR_SHIFT
		{
			name = Border 2
			transform = GlowBorder
			variable = fc.Conditioned(fc.GetPersistentAsNumber("Backlight"))
			passiveColor = 0,0,0,255
			activeColor = COLOR_ASET_SWITCHER_BORDER_POSITIVECOLOR
			blend = true
		}		
	}
}
@PROP[MAS_Switch_v1_Backlight]
{
	@MODULE[MASComponent]
	{
		@COLOR_SHIFT
		{
			@name = Border 1
			@transform = TumblerMarkObj
			@variable = fc.Conditioned(fc.GetPersistentAsNumber("Backlight"))
			@passiveColor = 0,0,0,255
			@activeColor = COLOR_ASET_SWITCHER_BORDER_POSITIVECOLOR
			@blend = true
		}
		COLOR_SHIFT
		{
			name = Border 2
			transform = GlowBorder
			variable = fc.Conditioned(fc.GetPersistentAsNumber("Backlight"))
			passiveColor = 0,0,0,255
			activeColor = COLOR_ASET_SWITCHER_BORDER_POSITIVECOLOR
			blend = true
		}		
	}
}
@PROP[MAS_Switch_v1_Brakes]
{
	@MODULE[MASComponent]
	{
		@COLOR_SHIFT
		{
			@name = Border 1
			@transform = TumblerMarkObj
			@variable = fc.Conditioned(fc.GetPersistentAsNumber("Backlight"))
			@passiveColor = 0,0,0,255
			@activeColor = COLOR_ASET_SWITCHER_BORDER_POSITIVECOLOR
			@blend = true
		}
		COLOR_SHIFT
		{
			name = Border 2
			transform = GlowBorder
			variable = fc.Conditioned(fc.GetPersistentAsNumber("Backlight"))
			passiveColor = 0,0,0,255
			activeColor = COLOR_ASET_SWITCHER_BORDER_POSITIVECOLOR
			blend = true
		}		
	}
}
@PROP[MAS_Switch_v1_CabinLi*]
{
	@MODULE[MASComponent]
	{
		@COLOR_SHIFT
		{
			@name = Border 1
			@transform = TumblerMarkObj
			@variable = fc.Conditioned(fc.GetPersistentAsNumber("Backlight"))
			@passiveColor = 0,0,0,255
			@activeColor = COLOR_ASET_SWITCHER_BORDER_POSITIVECOLOR
			@blend = true
		}
		COLOR_SHIFT
		{
			name = Border 2
			transform = GlowBorder
			variable = fc.Conditioned(fc.GetPersistentAsNumber("Backlight"))
			passiveColor = 0,0,0,255
			activeColor = COLOR_ASET_SWITCHER_BORDER_POSITIVECOLOR
			blend = true
		}		
	}
}
@PROP[MAS_Switch_v1_CockpitLi*]
{
	@MODULE[MASComponent]
	{
		@COLOR_SHIFT
		{
			@name = Border 1
			@transform = TumblerMarkObj
			@variable = fc.Conditioned(fc.GetPersistentAsNumber("Backlight"))
			@passiveColor = 0,0,0,255
			@activeColor = COLOR_ASET_SWITCHER_BORDER_POSITIVECOLOR
			@blend = true
		}
		COLOR_SHIFT
		{
			name = Border 2
			transform = GlowBorder
			variable = fc.Conditioned(fc.GetPersistentAsNumber("Backlight"))
			passiveColor = 0,0,0,255
			activeColor = COLOR_ASET_SWITCHER_BORDER_POSITIVECOLOR
			blend = true
		}		
	}
}
@PROP[MAS_Switch_v1_Dummy]
{
	@MODULE[MASComponent]
	{
		@COLOR_SHIFT
		{
			@name = Border 1
			@transform = TumblerMarkObj
			@variable = fc.Conditioned(fc.GetPersistentAsNumber("Backlight"))
			@passiveColor = 0,0,0,255
			@activeColor = COLOR_ASET_SWITCHER_BORDER_POSITIVECOLOR
			@blend = true
		}
		COLOR_SHIFT
		{
			name = Border 2
			transform = GlowBorder
			variable = fc.Conditioned(fc.GetPersistentAsNumber("Backlight"))
			passiveColor = 0,0,0,255
			activeColor = COLOR_ASET_SWITCHER_BORDER_POSITIVECOLOR
			blend = true
		}		
	}
}
@PROP[MAS_Switch_v1_EPG]
{
	@MODULE[MASComponent]
	{
		@COLOR_SHIFT
		{
			@name = Border 1
			@transform = TumblerMarkObj
			@variable = fc.Conditioned(fc.GetPersistentAsNumber("Backlight"))
			@passiveColor = 0,0,0,255
			@activeColor = COLOR_ASET_SWITCHER_BORDER_POSITIVECOLOR
			@blend = true
		}
		COLOR_SHIFT
		{
			name = Border 2
			transform = GlowBorder
			variable = fc.Conditioned(fc.GetPersistentAsNumber("Backlight"))
			passiveColor = 0,0,0,255
			activeColor = COLOR_ASET_SWITCHER_BORDER_POSITIVECOLOR
			blend = true
		}		
	}
}
@PROP[MAS_Switch_v1_ERSHUD_*]
{
	@MODULE[MASComponent]
	{
		@COLOR_SHIFT
		{
			@name = Border 1
			@transform = TumblerMarkObj
			@variable = fc.Conditioned(fc.GetPersistentAsNumber("Backlight"))
			@passiveColor = 0,0,0,255
			@activeColor = COLOR_ASET_SWITCHER_BORDER_POSITIVECOLOR
			@blend = true
		}
		COLOR_SHIFT
		{
			name = Border 2
			transform = GlowBorder
			variable = fc.Conditioned(fc.GetPersistentAsNumber("Backlight"))
			passiveColor = 0,0,0,255
			activeColor = COLOR_ASET_SWITCHER_BORDER_POSITIVECOLOR
			blend = true
		}		
	}
}
@PROP[MAS_Switch_v1_Fake*]
{
	@MODULE[MASComponent]
	{
		@COLOR_SHIFT
		{
			@name = Border 1
			@transform = TumblerMarkObj
			@variable = fc.Conditioned(fc.GetPersistentAsNumber("Backlight"))
			@passiveColor = 0,0,0,255
			@activeColor = COLOR_ASET_SWITCHER_BORDER_POSITIVECOLOR
			@blend = true
		}
		COLOR_SHIFT
		{
			name = Border 2
			transform = GlowBorder
			variable = fc.Conditioned(fc.GetPersistentAsNumber("Backlight"))
			passiveColor = 0,0,0,255
			activeColor = COLOR_ASET_SWITCHER_BORDER_POSITIVECOLOR
			blend = true
		}		
	}
}
@PROP[MAS_Switch_v1_FuelCell]
{
	@MODULE[MASComponent]
	{
		@COLOR_SHIFT
		{
			@name = Border 1
			@transform = TumblerMarkObj
			@variable = fc.Conditioned(fc.GetPersistentAsNumber("Backlight"))
			@passiveColor = 0,0,0,255
			@activeColor = COLOR_ASET_SWITCHER_BORDER_POSITIVECOLOR
			@blend = true
		}
		COLOR_SHIFT
		{
			name = Border 2
			transform = GlowBorder
			variable = fc.Conditioned(fc.GetPersistentAsNumber("Backlight"))
			passiveColor = 0,0,0,255
			activeColor = COLOR_ASET_SWITCHER_BORDER_POSITIVECOLOR
			blend = true
		}		
	}
}
@PROP[MAS_Switch_v1_G*]
{
	@MODULE[MASComponent]
	{
		@COLOR_SHIFT
		{
			@name = Border 1
			@transform = TumblerMarkObj
			@variable = fc.Conditioned(fc.GetPersistentAsNumber("Backlight"))
			@passiveColor = 0,0,0,255
			@activeColor = COLOR_ASET_SWITCHER_BORDER_POSITIVECOLOR
			@blend = true
		}
		COLOR_SHIFT
		{
			name = Border 2
			transform = GlowBorder
			variable = fc.Conditioned(fc.GetPersistentAsNumber("Backlight"))
			passiveColor = 0,0,0,255
			activeColor = COLOR_ASET_SWITCHER_BORDER_POSITIVECOLOR
			blend = true
		}		
	}
}
@PROP[MAS_Switch_v1_Lights]
{
	@MODULE[MASComponent]
	{
		@COLOR_SHIFT
		{
			@name = Border 1
			@transform = TumblerMarkObj
			@variable = fc.Conditioned(fc.GetPersistentAsNumber("Backlight"))
			@passiveColor = 0,0,0,255
			@activeColor = COLOR_ASET_SWITCHER_BORDER_POSITIVECOLOR
			@blend = true
		}
		COLOR_SHIFT
		{
			name = Border 2
			transform = GlowBorder
			variable = fc.Conditioned(fc.GetPersistentAsNumber("Backlight"))
			passiveColor = 0,0,0,255
			activeColor = COLOR_ASET_SWITCHER_BORDER_POSITIVECOLOR
			blend = true
		}		
	}
}
@PROP[MAS_Switch_v1_MainPanelLights_Mk1Cockpit]
{
	@MODULE[MASComponent]
	{
		@COLOR_SHIFT
		{
			@name = Border 1
			@transform = TumblerMarkObj
			@variable = fc.Conditioned(fc.GetPersistentAsNumber("Backlight"))
			@passiveColor = 0,0,0,255
			@activeColor = COLOR_ASET_SWITCHER_BORDER_POSITIVECOLOR
			@blend = true
		}
		COLOR_SHIFT
		{
			name = Border 2
			transform = GlowBorder
			variable = fc.Conditioned(fc.GetPersistentAsNumber("Backlight"))
			passiveColor = 0,0,0,255
			activeColor = COLOR_ASET_SWITCHER_BORDER_POSITIVECOLOR
			blend = true
		}		
	}
}
@PROP[MAS_Switch_v1_MJ_*]
{
	@MODULE[MASComponent]
	{
		@COLOR_SHIFT
		{
			@name = Border 1
			@transform = TumblerMarkObj
			@variable = fc.Conditioned(fc.GetPersistentAsNumber("Backlight"))
			@passiveColor = 0,0,0,255
			@activeColor = COLOR_ASET_SWITCHER_BORDER_POSITIVECOLOR
			@blend = true
		}
		COLOR_SHIFT
		{
			name = Border 2
			transform = GlowBorder
			variable = fc.Conditioned(fc.GetPersistentAsNumber("Backlight"))
			passiveColor = 0,0,0,255
			activeColor = COLOR_ASET_SWITCHER_BORDER_POSITIVECOLOR
			blend = true
		}		
	}
}
@PROP[MAS_Switch_v1_PrecisionCtrl]
{
	@MODULE[MASComponent]
	{
		@COLOR_SHIFT
		{
			@name = Border 1
			@transform = TumblerMarkObj
			@variable = fc.Conditioned(fc.GetPersistentAsNumber("Backlight"))
			@passiveColor = 0,0,0,255
			@activeColor = COLOR_ASET_SWITCHER_BORDER_POSITIVECOLOR
			@blend = true
		}
		COLOR_SHIFT
		{
			name = Border 2
			transform = GlowBorder
			variable = fc.Conditioned(fc.GetPersistentAsNumber("Backlight"))
			passiveColor = 0,0,0,255
			activeColor = COLOR_ASET_SWITCHER_BORDER_POSITIVECOLOR
			blend = true
		}		
	}
}
@PROP[MAS_Switch_v1_RCS]
{
	@MODULE[MASComponent]
	{
		@COLOR_SHIFT
		{
			@name = Border 1
			@transform = TumblerMarkObj
			@variable = fc.Conditioned(fc.GetPersistentAsNumber("Backlight"))
			@passiveColor = 0,0,0,255
			@activeColor = COLOR_ASET_SWITCHER_BORDER_POSITIVECOLOR
			@blend = true
		}
		COLOR_SHIFT
		{
			name = Border 2
			transform = GlowBorder
			variable = fc.Conditioned(fc.GetPersistentAsNumber("Backlight"))
			passiveColor = 0,0,0,255
			activeColor = COLOR_ASET_SWITCHER_BORDER_POSITIVECOLOR
			blend = true
		}		
	}
}
@PROP[MAS_Switch_v1_ResourceMonitorMode]
{
	@MODULE[MASComponent]
	{
		@COLOR_SHIFT
		{
			@name = Border 1
			@transform = TumblerMarkObj
			@variable = fc.Conditioned(fc.GetPersistentAsNumber("Backlight"))
			@passiveColor = 0,0,0,255
			@activeColor = COLOR_ASET_SWITCHER_BORDER_POSITIVECOLOR
			@blend = true
		}
		COLOR_SHIFT
		{
			name = Border 2
			transform = GlowBorder
			variable = fc.Conditioned(fc.GetPersistentAsNumber("Backlight"))
			passiveColor = 0,0,0,255
			activeColor = COLOR_ASET_SWITCHER_BORDER_POSITIVECOLOR
			blend = true
		}		
	}
}
@PROP[MAS_Switch_v1_SAS]
{
	@MODULE[MASComponent]
	{
		@COLOR_SHIFT
		{
			@name = Border 1
			@transform = TumblerMarkObj
			@variable = fc.Conditioned(fc.GetPersistentAsNumber("Backlight"))
			@passiveColor = 0,0,0,255
			@activeColor = COLOR_ASET_SWITCHER_BORDER_POSITIVECOLOR
			@blend = true
		}
		COLOR_SHIFT
		{
			name = Border 2
			transform = GlowBorder
			variable = fc.Conditioned(fc.GetPersistentAsNumber("Backlight"))
			passiveColor = 0,0,0,255
			activeColor = COLOR_ASET_SWITCHER_BORDER_POSITIVECOLOR
			blend = true
		}		
	}
}
@PROP[MAS_Switch_v1_SolarPanel]
{
	@MODULE[MASComponent]
	{
		@COLOR_SHIFT
		{
			@name = Border 1
			@transform = TumblerMarkObj
			@variable = fc.Conditioned(fc.GetPersistentAsNumber("Backlight"))
			@passiveColor = 0,0,0,255
			@activeColor = COLOR_ASET_SWITCHER_BORDER_POSITIVECOLOR
			@blend = true
		}
		COLOR_SHIFT
		{
			name = Border 2
			transform = GlowBorder
			variable = fc.Conditioned(fc.GetPersistentAsNumber("Backlight"))
			passiveColor = 0,0,0,255
			activeColor = COLOR_ASET_SWITCHER_BORDER_POSITIVECOLOR
			blend = true
		}		
	}
}
@PROP[MAS_Switch_v1_TWRIndicatorMode]
{
	@MODULE[MASComponent]
	{
		@COLOR_SHIFT
		{
			@name = Border 1
			@transform = TumblerMarkObj
			@variable = fc.Conditioned(fc.GetPersistentAsNumber("Backlight"))
			@passiveColor = 0,0,0,255
			@activeColor = COLOR_ASET_SWITCHER_BORDER_POSITIVECOLOR
			@blend = true
		}
		COLOR_SHIFT
		{
			name = Border 2
			transform = GlowBorder
			variable = fc.Conditioned(fc.GetPersistentAsNumber("Backlight"))
			passiveColor = 0,0,0,255
			activeColor = COLOR_ASET_SWITCHER_BORDER_POSITIVECOLOR
			blend = true
		}		
	}
}


