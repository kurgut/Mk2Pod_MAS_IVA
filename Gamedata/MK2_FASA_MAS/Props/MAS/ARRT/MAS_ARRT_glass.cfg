PROP
{
	// Range/Altitude tapemeter, Range Rate/Altitude Rate tapemeter
	name = MAS_ARRT_glass
	MODEL
	{
		model = ASET/ASET_Props/Instruments/ARRT/ARRT
	}
	MODEL
	{
		model = MK2_FASA_MAS/Props/MAS/0_Instruments/Assets/ARRT_GLASS
	}

	MODULE
	{
		name = MASComponent
		
		//TRIGGER_EVENT
		//{
		//	name = ARRT Validation - no longer used, but this is how the example Lua script worked
		//	event = ARRT_Validate(fc.GetPersistentAsNumber("MAS_ARRT_Enable"), fc.GetPersistentAsNumber("MAS_ARRT_Mode"))
		//	exitEvent = fc.SetPersistent("MAS_ARRT_Enable", 0)
		//	autoRepeat = true
		//	variable = fc.GetPersistentAsNumber("MAS_ARRT_On")
		//}
		TRIGGER_EVENT
		{
			name = ARRT Altimeter Validation
			event = fc.SetBits("MAS_ARRT_Mode_Validation", 1)
			exitEvent = fc.ClearBits("MAS_ARRT_Mode_Validation", 1)
			variable = fc.GetPersistentAsNumber("MAS_ARRT_On") and (fc.GetPersistentAsNumber("MAS_ARRT_Mode") == 0) and (fc.AltitudeBottom() <= 5000)
		}
		TRIGGER_EVENT
		{
			name = ARRT Range Validation
			event = fc.SetBits("MAS_ARRT_Mode_Validation", 2)
			exitEvent = fc.ClearBits("MAS_ARRT_Mode_Validation", 2)
			variable = fc.GetPersistentAsNumber("MAS_ARRT_On") and (fc.GetPersistentAsNumber("MAS_ARRT_Mode") == 1) and (fc.TargetType() > 0)
		}
		TRIGGER_EVENT
		{
			name = ARRT Validation
			event = fc.SetPersistent("MAS_ARRT_Enable", 1)
			exitEvent = fc.SetPersistent("MAS_ARRT_Enable", 0)
			variable = fc.GetPersistentAsNumber("MAS_ARRT_Mode_Validation") > 0
		}

// TAPES ANIMATIONS ========================================

// ALT/RANGE tape
		ANIMATION
		{
			name = ALT/RANGE tape animation
			animation = AltRangeScaleAnim
			variable = fc.Conditioned(fc.GetPersistentAsNumber("MAS_ARRT_Enable") * fc.Select(fc.GetPersistentAsNumber("MAS_ARRT_Mode") > 0, fc.TargetDistance(), fc.AltitudeBottom()) * 0.0002)
			speed = 1
		}

// ALT/RANGE RATE tape
		ANIMATION
		{
			name = ALT/RANGE RATE tape animation
			animation = AltRangeRateScaleAnim
			variable = fc.Conditioned(fc.InverseLerp(fc.GetPersistentAsNumber("MAS_ARRT_Enable") * fc.Select(fc.GetPersistentAsNumber("MAS_ARRT_Mode") > 0, fc.TargetSpeed(), fc.VerticalSpeed()), -300, 300), 0.5)
			speed = 1
		}

// ARRT Mode indication ----------------------------------------

// ALT/ALT RT
		COLOR_SHIFT
		{
			name = ALTtablo color
			transform = ALTtablo
			passiveColor = 0,0,0,255
			activeColor = COLOR_ASET_NASAGAUGEHAND_ACTIVECOLOR
			variable = fc.Conditioned((fc.GetPersistentAsNumber("MAS_ARRT_Mode") == 0) and (fc.GetPersistentAsNumber("MAS_ARRT_On")))
		}
		TEXTURE_SHIFT
		{
			name = ALTtablo shift
			transform = ALTtablo
			layers = _MainTex _Emissive
			startUV = 0, 0
			endUV = 0.123, 0
			variable = fc.Conditioned((fc.GetPersistentAsNumber("MAS_ARRT_Mode") == 0) and (fc.GetPersistentAsNumber("MAS_ARRT_On")))
		}

// RANGE/RANGE RT
		COLOR_SHIFT
		{
			name = RANGEtablo color
			transform = RANGEtablo
			passiveColor = 0,0,0,255
			activeColor = COLOR_ASET_NASAGAUGEHAND_ACTIVECOLOR
			variable = fc.Conditioned((fc.GetPersistentAsNumber("MAS_ARRT_Mode") == 1) and (fc.GetPersistentAsNumber("MAS_ARRT_On")))
		}
		TEXTURE_SHIFT
		{
			name = RANGEtablo shift
			transform = RANGEtablo
			layers = _MainTex _Emissive
			startUV = 0, 0
			endUV = 0.123, 0
			variable = fc.Conditioned((fc.GetPersistentAsNumber("MAS_ARRT_Mode") == 1) and (fc.GetPersistentAsNumber("MAS_ARRT_On")))
		}

// BACKLIGHT ----------------------------------
		COLOR_SHIFT
		{
			name = MarkObj light
			transform = MarkObj
			passiveColor = 0,0,0,255
			activeColor = COLOR_ASET_NASAGAUGEHAND_ACTIVECOLOR
			variable = fc.Conditioned(fc.GetPersistentAsNumber("Backlight") * fc.GetPersistentAsNumber("MAS_ARRT_Enable"))
			blend = true
		}

		COLOR_SHIFT
		{
			name = ALTscaleObj
			transform = ALTscaleObj
			passiveColor = 0,0,0,255
			activeColor = COLOR_ASET_NASAGAUGEHAND_ACTIVECOLOR
			variable = fc.Conditioned(fc.GetPersistentAsNumber("Backlight") * fc.GetPersistentAsNumber("MAS_ARRT_Enable"))
			blend = true
		}

		COLOR_SHIFT
		{
			name = RATEscaleObj
			transform = RATEscaleObj
			passiveColor = 0,0,0,255
			activeColor = COLOR_ASET_NASAGAUGEHAND_ACTIVECOLOR
			variable = fc.Conditioned(fc.GetPersistentAsNumber("Backlight") * fc.GetPersistentAsNumber("MAS_ARRT_Enable"))
			blend = true
		}
	}
}
