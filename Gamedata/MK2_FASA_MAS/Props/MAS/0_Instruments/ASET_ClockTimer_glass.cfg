PROP
{
	name = MAS_ASET_ClockTimer_glass
	MODEL
	{
		model = ASET/ASET_Props/Instruments/ASET_ClockTimer/ASET_ClockTimer
	}
	
	MODEL
	{
		model = MK2_FASA_MAS/Props/MAS/0_Instruments/Assets/ASET_VSI_Type_GLASS
	}

	MODULE
	{
		name = MASComponent

		// Kerbin or Earth time scale -----------------------------------------
		TRANSLATION
		{
			name = Earth time
			transform = EarthScaleObj
			startTranslation = 0,0,0
			endTranslation = 0,-0.003,0
			variable = fc.KerbinTime()
		}
		TRANSLATION
		{
			name = Kerbin time
			transform = KerbinClockScaleObj
			startTranslation = 0,-0.003,0
			endTranslation = 0,0,0
			variable = fc.KerbinTime()
		}

		// backlight ----------------------------------------------------------
		COLOR_SHIFT
		{
			name = Instrument Lighting
			transform = MainScaleObj, EarthScaleObj, KerbinClockScaleObj, Labels_and_TimerScaleObj
			passiveColor = COLOR_ASET_NASAGAUGESCALE_PASSIVECOLOR
			activeColor = COLOR_ASET_NASAGAUGESCALE_ACTIVECOLOR
			variable = fc.Conditioned(fc.GetPersistentAsNumber("Backlight"))
			blend = true
		}
		COLOR_SHIFT
		{
			name = Component Lighting
			transform = TimerButtonLabelObj, Hours_arrowObj, Minutes_arrowObj, Seconds_arrowObj, TimerArrowSecObj, TimerArrowMinObj
			passiveColor = COLOR_ASET_NASAGAUGEHAND_PASSIVECOLOR
			activeColor = COLOR_ASET_NASAGAUGEHAND_ACTIVECOLOR
			variable = fc.Conditioned(fc.GetPersistentAsNumber("Backlight"))
			blend = true
		}

		// Clock Hands --------------------------------------------------------
		ROTATION
		{
			name = Second hand
			transform = Seconds_arrowObj
			startRotation = 0,0,0
			endRotation = 0,360,0
			variable = fc.SecondsOfMinute(fc.UT())
			range = 0, 60
			blend = true
			speed = 1.0
			longPath = true
		}
		ROTATION
		{
			name = Minute hand
			transform = Minutes_arrowObj
			startRotation = 0,0,0
			endRotation = 0,360,0
			variable = fc.MinutesOfHour(fc.UT())
			range = 0, 60
			blend = true
			speed = 1.0
			longPath = true
		}
		ROTATION
		{
			name = Hour hand
			transform = Hours_arrowObj
			startRotation = 0,0,0
			endRotation = 0,360,0
			variable = fc.HourOfDay(fc.UT())
			range = 0, fc.HoursPerDay()
			blend = true
			speed = 1.0
			longPath = true
		}

		// Timer Hands --------------------------------------------------------
		ROTATION
		{
			name = Timer Second hand
			transform = TimerArrowSecObj
			startRotation = 0,0,0
			endRotation = 0,360,0
			variable = fc.SecondsOfMinute(fc.GetPersistentAsNumber("%AUTOID%-TimerValue"))
			range = 0, 60
			blend = true
			speed = 1.0
			longPath = true
		}
		ROTATION
		{
			name = Timer Minute hand
			transform = TimerArrowMinObj
			startRotation = 0,0,0
			endRotation = 0,360,0
			variable = fc.MinutesOfHour(fc.GetPersistentAsNumber("%AUTOID%-TimerValue"))
			range = 0, 60
			blend = true
			speed = 1.0
			longPath = true
		}

		// Timer Control ------------------------------------------------------
		COLLIDER_EVENT
		{
			name = Timer button
			collider = StartColl
			onClick = fc.AddPersistentWrapped("%AUTOID%-TimerMode", 1, 0, 3)
			sound = ASET/ASET_Props/Sounds/AnalogTimerButton
			volume = 0.5
		}
		TRANSLATION
		{
			name = Timer flag
			transform = TimerON_flagObj
			startTranslation = 0,0,0
			endTranslation = 0,0,-0.005
			variable = fc.GetPersistentAsNumber("%AUTOID%-TimerMode") == 1
		}
		TRIGGER_EVENT
		{
			name = Timer Initialize
			event = fc.SetPersistent("%AUTOID%-TimerValue", 0)
			exitEvent = fc.SetPersistent("%AUTOID%-TimerStart", fc.UT())
			variable = fc.GetPersistentAsNumber("%AUTOID%-TimerMode") == 0
		}
		TRIGGER_EVENT
		{
			name = Timer Update
			event = fc.SetPersistent("%AUTOID%-TimerValue", fc.UT() - fc.GetPersistentAsNumber("%AUTOID%-TimerStart"))
			variable = fc.GetPersistentAsNumber("%AUTOID%-TimerMode") == 1
			autoRepeat = true
		}
	}
}
