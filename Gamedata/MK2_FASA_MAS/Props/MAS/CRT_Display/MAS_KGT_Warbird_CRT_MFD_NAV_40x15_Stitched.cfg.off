PROP
{
  name = MAS_KGT_Warbird_CRT_MFD_NAV_40x15_Stitched_MK2

// MODELS
  MODEL
  {
    model = MK2_FASA_MAS/Props/MAS/CRT_Display/Assets/PilotCRT
  }

  MODEL
  {
    model = PCRIVAPLUS/Props/WB/Props/RetroButton/RetroButtonUp
    position = 0.003310381,-0.0059,0.0721847
    scale = 0.8275952,0.8275952,0.8275952
  }

  MODEL
  {
    model = PCRIVAPLUS/Props/WB/Props/RetroButton/RetroButtonDown
    position = -0.01547605,-0.0059,0.0721847
    scale = 0.8275952,0.8275952,0.8275952
  }

  MODEL
  {
    model = PCRIVAPLUS/Props/WB/Props/RetroButton/RetroButtonEnter
    position = 0.003310396,-0.0059,0.09006646
    scale = 0.8275952,0.8275952,0.8275952
  }

  MODEL
  {
    model = PCRIVAPLUS/Props/WB/Props/RetroButton/RetroButtonBack
    position = -0.01547605,-0.0059,0.09006646
    scale = 0.8275952,0.8275952,0.8275952
  }

  MODEL
  {
    model = PCRIVAPLUS/Props/WB/Props/RetroButton/RetroButtonPrev
    position = 0.022096812,-0.0059,0.0721847
    scale = 0.8275952,0.8275952,0.8275952
  }

  MODEL
  {
    model = PCRIVAPLUS/Props/WB/Props/RetroButton/RetroButtonNext
    position = 0.040883243,-0.0059,0.0721847
    scale = 0.8275952,0.8275952,0.8275952
  }

  MODEL
  {
    model = PCRIVAPLUS/Props/WB/Props/RetroButton/RetroButtonEsc
    position = 0.022096812,-0.0059,0.09006646
    scale = 0.8275952,0.8275952,0.8275952
  }

  MODEL
  {
    model = PCRIVAPLUS/Props/WB/Props/RetroButton/RetroButtonHome
    position = 0.040883243,-0.0059,0.09006646
    scale = 0.8275952,0.8275952,0.8275952
  }

  MODEL
  {
    model = ASET/ASET_Avionics/ModernPack/ASET_B-Knob/ASET_B-Knob_Model
    texture = ASET_B-KnobDiffuse,ASET/ASET_Avionics/ModernPack/ASET_B-Knob/ASET_B-KnobDiffuse
    position = -0.05204655,0.008552034,0.08533426
    scale = 0.4781691,0.4781691,0.4781691
  }

  MODEL
  {
    model = ASET/ASET_Avionics/ModernPack/ASET_B-Knob/ASET_B-Knob_DoubleCollider_L-R
    position = -0.05204655,0.008552034,0.08533426
    scale = 0.4781691,0.4781691,0.4781691
  }

  MODEL
  {
    model = ASET/ASET_Avionics/ModernPack/ASET_B-Knob/ASET_B-Knob_6_Marks
    position = -0.05204655,0.008552034,0.08533426
    scale = 0.4781691,0.4781691,0.4781691
  }

// MASMonitor config
  MODULE
  {
    name = MASMonitor

    screenTransform = ASET_CRT_Screen_Obj
    layer = _Emissive
    screenSize = 640, 640
    fontSize = 16, 32
    font = Press Start K
    textColor = COLOR_CRT_GREEN
    //backgroundColor = 0, 8, 0, 255
    backgroundColor = 4, 8, 4, 255 // from MAS ASET DSKY
    monitorID = CRT_STIT

    page = MAS_KGT_CRT_Standby
    page = MAS_KGT_CRT_Nav
    page = MAS_KGT_CRT_Target
    page = MAS_KGT_CRT_Target_Celestials
    page = MAS_KGT_CRT_Target_Vessels
    page = MAS_KGT_CRT_Target_Waypoints
    page = MAS_KGT_CRT_Target_Filters
    page = MAS_KGT_CRT_Target_ReferencePart
    page = MAS_KGT_CRT_Docking
    page = MAS_KGT_CRT_KOS
    page = MAS_KGT_CRT_OrbitDisplay
  }

  MODULE
  {
    name = MASComponent

    COLOR_SHIFT
		{
			name = Monitor Power
			transform = ASET_CRT_Screen_Obj
			passiveColor = 0,0,0,255
			activeColor = 20,255,20,255
			variable = fc.Conditioned(fc.GetPersistentAsNumber("CRT_STIT_Power"))
			blend = true
		}

    ANIMATION
		{
			name = Button lighting
			animation = RetroButtonLightAnim
			//variable = 0.333 * (fc.GetPersistentAsNumber("Backlight"))
			variable = fc.Conditioned(fc.GetPersistentAsNumber("Backlight"))
		}

    // COLOR_SHIFT
    // {
    //   name = Monitor Power
    //   transform = ASET_CRT_Screen_Obj
    //   passiveColor = 0,0,0,255
    //   activeColor = 20,255,20,255
    //   variable = fc.Conditioned(1)
    // }

    COLLIDER_EVENT
    {
      name = Left Collider
      collider = KnobColliderMinus
      sound = ASET/ASET_Props/Sounds/click-027
      volume = 1
      onClick = fc.AddPersistentClamped("WARBIRD_NAV_MFD_SELECT", -1, 0, 5)
    }

    COLLIDER_EVENT
    {
      name = Right Collider
      collider = KnobColliderPlus
      sound = ASET/ASET_Props/Sounds/click-027
      volume = 1
      onClick = fc.AddPersistentClamped("WARBIRD_NAV_MFD_SELECT", 1, 0, 5)
    }

    TEXT_LABEL
    {
      name = Button Text
      transform = ButtonNameTextObjUp
      fontSize = 3.3
      lineSpacing = 0.9
      transformOffset = 0.00651317,-0.00391453
      font = Liberation Sans
      style = Bold
      alignment = Center
      anchor = MiddleCenter
      emissive = never
      passiveColor = COLOR_MOARdV_UnlitBlackText
      text = UP
    }

    COLLIDER_EVENT
    {
      name = Button Collider
      collider = ButtonTopObjUp
      sound = ASET/ASET_Props/Sounds/B_Button01_Click
      volume = 1
      onClick = fc.SetPersistent("CRT_STIT_Up", 1)
      onRelease = fc.SetPersistent("CRT_STIT_Up", 0)
    }

    COLLIDER_EVENT
    {
      name = Button Collider
      collider = ButtonTopObjUp
      onClick = fc.SendSoftkey("CRT_STIT", 0)
    }

    TRANSLATION
    {
      name = Button Animator
      transform = ButtonGrpUp
      startTranslation = 0,0,0
      endTranslation = 0,-0.0025,0
      variable = fc.GetPersistentAsNumber("CRT_STIT_Up")
      blend = true
      speed = 10.0
    }

    TEXT_LABEL
    {
      name = Button Text
      transform = ButtonNameTextObjDown
      fontSize = 3.3
      lineSpacing = 0.9
      transformOffset = 0.00651317,-0.00391453
      font = Liberation Sans
      style = Bold
      alignment = Center
      anchor = MiddleCenter
      emissive = never
      passiveColor = COLOR_MOARdV_UnlitBlackText
      text = DOWN
    }

    COLLIDER_EVENT
    {
      name = Button Collider
      collider = ButtonTopObjDown
      sound = ASET/ASET_Props/Sounds/B_Button01_Click
      volume = 1
      onClick = fc.SetPersistent("CRT_STIT_Down", 1)
      onRelease = fc.SetPersistent("CRT_STIT_Down", 0)
    }

    COLLIDER_EVENT
    {
      name = Button Collider
      collider = ButtonTopObjDown
      onClick = fc.SendSoftkey("CRT_STIT", 1)
    }

    TRANSLATION
    {
      name = Button Animator
      transform = ButtonGrpDown
      startTranslation = 0,0,0
      endTranslation = 0,-0.0025,0
      variable = fc.GetPersistentAsNumber("CRT_STIT_Down")
      blend = true
      speed = 10.0
    }

    TEXT_LABEL
    {
      name = Button Text
      transform = ButtonNameTextObjEnter
      fontSize = 3.3
      lineSpacing = 0.9
      transformOffset = 0.00651317,-0.00391453
      font = Liberation Sans
      style = Bold
      alignment = Center
      anchor = MiddleCenter
      emissive = never
      passiveColor = COLOR_MOARdV_UnlitBlackText
      text = ENT
    }

    COLLIDER_EVENT
    {
      name = Button Collider
      collider = ButtonTopObjEnter
      sound = ASET/ASET_Props/Sounds/B_Button01_Click
      volume = 1
      onClick = fc.SetPersistent("CRT_STIT_Enter", 1)
      onRelease = fc.SetPersistent("CRT_STIT_Enter", 0)
    }

    COLLIDER_EVENT
    {
      name = Button Collider
      collider = ButtonTopObjEnter
      onClick = fc.SendSoftkey("CRT_STIT", 2)
    }

    TRANSLATION
    {
      name = Button Animator
      transform = ButtonGrpEnter
      startTranslation = 0,0,0
      endTranslation = 0,-0.0025,0
      variable = fc.GetPersistentAsNumber("CRT_STIT_Enter")
      blend = true
      speed = 10.0
    }

    TEXT_LABEL
    {
      name = Button Text
      transform = ButtonNameTextObjBack
      fontSize = 3.3
      lineSpacing = 0.9
      transformOffset = 0.00651317,-0.00391453
      font = Liberation Sans
      style = Bold
      alignment = Center
      anchor = MiddleCenter
      emissive = never
      passiveColor = COLOR_MOARdV_UnlitBlackText
      text = BACK
    }

    COLLIDER_EVENT
    {
      name = Button Collider
      collider = ButtonTopObjBack
      sound = ASET/ASET_Props/Sounds/B_Button01_Click
      volume = 1
      onClick = fc.SetPersistent("CRT_STIT_Back", 1)
      onRelease = fc.SetPersistent("CRT_STIT_Back", 0)
    }

    COLLIDER_EVENT
    {
      name = Button Collider
      collider = ButtonTopObjBack
      onClick = fc.SendSoftkey("CRT_STIT", 6)
    }

    TRANSLATION
    {
      name = Button Animator
      transform = ButtonGrpBack
      startTranslation = 0,0,0
      endTranslation = 0,-0.0025,0
      variable = fc.GetPersistentAsNumber("CRT_STIT_Back")
      blend = true
      speed = 10.0
    }

    TEXT_LABEL
    {
      name = Button Text
      transform = ButtonNameTextObjPrev
      fontSize = 3.3
      lineSpacing = 0.9
      transformOffset = 0.00651317,-0.00391453
      font = Liberation Sans
      style = Bold
      alignment = Center
      anchor = MiddleCenter
      emissive = never
      passiveColor = COLOR_MOARdV_UnlitBlackText
      text = PREV
    }

    COLLIDER_EVENT
    {
      name = Button Collider
      collider = ButtonTopObjPrev
      sound = ASET/ASET_Props/Sounds/B_Button01_Click
      volume = 1
      onClick = fc.SetPersistent("CRT_STIT_Prev", 1)
      onRelease = fc.SetPersistent("CRT_STIT_Prev", 0)
    }

    COLLIDER_EVENT
    {
      name = Button Collider
      collider = ButtonTopObjPrev
      onClick = fc.SendSoftkey("CRT_STIT", 8)
    }

    TRANSLATION
    {
      name = Button Animator
      transform = ButtonGrpPrev
      startTranslation = 0,0,0
      endTranslation = 0,-0.0025,0
      variable = fc.GetPersistentAsNumber("CRT_STIT_Prev")
      blend = true
      speed = 10.0
    }

    TEXT_LABEL
    {
      name = Button Text
      transform = ButtonNameTextObjNext
      fontSize = 3.3
      lineSpacing = 0.9
      transformOffset = 0.00651317,-0.00391453
      font = Liberation Sans
      style = Bold
      alignment = Center
      anchor = MiddleCenter
      emissive = never
      passiveColor = COLOR_MOARdV_UnlitBlackText
      text = NEXT
    }

    COLLIDER_EVENT
    {
      name = Button Collider
      collider = ButtonTopObjNext
      sound = ASET/ASET_Props/Sounds/B_Button01_Click
      volume = 1
      onClick = fc.SetPersistent("CRT_STIT_Next", 1)
      onRelease = fc.SetPersistent("CRT_STIT_Next", 0)
    }

    COLLIDER_EVENT
    {
      name = Button Collider
      collider = ButtonTopObjNext
      onClick = fc.SendSoftkey("CRT_STIT", 7)
    }

    TRANSLATION
    {
      name = Button Animator
      transform = ButtonGrpNext
      startTranslation = 0,0,0
      endTranslation = 0,-0.0025,0
      variable = fc.GetPersistentAsNumber("CRT_STIT_Next")
      blend = true
      speed = 10.0
    }

    TEXT_LABEL
    {
      name = Button Text
      transform = ButtonNameTextObjEsc
      fontSize = 3.3
      lineSpacing = 0.9
      transformOffset = 0.00651317,-0.00391453
      font = Liberation Sans
      style = Bold
      alignment = Center
      anchor = MiddleCenter
      emissive = never
      passiveColor = COLOR_MOARdV_UnlitBlackText
      text = ESC
    }

    COLLIDER_EVENT
    {
      name = Button Collider
      collider = ButtonTopObjEsc
      sound = ASET/ASET_Props/Sounds/B_Button01_Click
      volume = 1
      onClick = fc.SetPersistent("CRT_STIT_Esc", 1)
      onRelease = fc.SetPersistent("CRT_STIT_Esc", 0)
    }

    COLLIDER_EVENT
    {
      name = Button Collider
      collider = ButtonTopObjEsc
      onClick = fc.SendSoftkey("CRT_STIT", 3)
    }

    TRANSLATION
    {
      name = Button Animator
      transform = ButtonGrpEsc
      startTranslation = 0,0,0
      endTranslation = 0,-0.0025,0
      variable = fc.GetPersistentAsNumber("CRT_STIT_Esc")
      blend = true
      speed = 10.0
    }

    TEXT_LABEL
    {
      name = Button Text
      transform = ButtonNameTextObjHome
      fontSize = 3.3
      lineSpacing = 0.9
      transformOffset = 0.00651317,-0.00391453
      font = Liberation Sans
      style = Bold
      alignment = Center
      anchor = MiddleCenter
      emissive = never
      passiveColor = COLOR_MOARdV_UnlitBlackText
      text = HOME
    }

    COLLIDER_EVENT
    {
      name = Button Collider
      collider = ButtonTopObjHome
      sound = ASET/ASET_Props/Sounds/B_Button01_Click
      volume = 1
      onClick = fc.SetPersistent("CRT_STIT_Home", 1)
      onRelease = fc.SetPersistent("CRT_STIT_Home", 0)
    }

    COLLIDER_EVENT
    {
      name = Button Collider
      collider = ButtonTopObjHome
      onClick = fc.SendSoftkey("CRT_STIT", 4)
    }

    TRANSLATION
    {
      name = Button Animator
      transform = ButtonGrpHome
      startTranslation = 0,0,0
      endTranslation = 0,-0.0025,0
      variable = fc.GetPersistentAsNumber("CRT_STIT_Home")
      blend = true
      speed = 10.0
    }

    TEXT_LABEL
    {
      name = Mode Text
      transform = TopNameTextObj
      fontSize = 5.0
      lineSpacing = 0.9
      transformOffset = 0,0.00391453
      font = Liberation Sans
      style = Bold
      alignment = Center
      anchor = MiddleCenter
      variable = fc.Conditioned(fc.GetPersistentAsNumber("Backlight"))
      blend = true
      emissive = active
      passiveColor = COLOR_MOARdV_UnlitText
      activeColor = COLOR_ASET_SWITCHER_NAME_POSITIVECOLOR
      text = CRT MODE SELECT
    }

    TEXT_LABEL
    {
      name = Mode Text
      transform = Pos_1_TextObj
      fontSize = 3.5
      lineSpacing = 0.9
      transformOffset = -0.00391453, 0
      font = Liberation Sans
      style = Bold
      alignment = Center
      anchor = MiddleCenter
      variable = fc.Conditioned(fc.GetPersistentAsNumber("Backlight"))
      blend = true
      emissive = active
      passiveColor = COLOR_MOARdV_UnlitText
      activeColor = COLOR_ASET_SWITCHER_NAME_POSITIVECOLOR
      text = OFF /$$$CAM
    }

    TEXT_LABEL
    {
      name = Mode Text
      transform = Pos_2_TextObj
      fontSize = 3.5
      lineSpacing = 0.9
      transformOffset = -0.00391453, 0.002
      font = Liberation Sans
      style = Bold
      alignment = Center
      anchor = MiddleCenter
      variable = fc.Conditioned(fc.GetPersistentAsNumber("Backlight"))
      blend = true
      emissive = active
      passiveColor = COLOR_MOARdV_UnlitText
      activeColor = COLOR_ASET_SWITCHER_NAME_POSITIVECOLOR
      text = NAV
    }

    TEXT_LABEL
    {
      name = Mode Text
      transform = Pos_3_TextObj
      fontSize = 3.5
      lineSpacing = 0.9
      transformOffset = -0.00391453, 0.002
      font = Liberation Sans
      style = Bold
      alignment = Center
      anchor = MiddleCenter
      variable = fc.Conditioned(fc.GetPersistentAsNumber("Backlight"))
      blend = true
      emissive = active
      passiveColor = COLOR_MOARdV_UnlitText
      activeColor = COLOR_ASET_SWITCHER_NAME_POSITIVECOLOR
      text = TARGET
    }

    TEXT_LABEL
    {
      name = Mode Text
      transform = Pos_4_TextObj
      fontSize = 3.5
      lineSpacing = 0.9
      transformOffset = 0.00391453, 0.002
      font = Liberation Sans
      style = Bold
      alignment = Center
      anchor = MiddleCenter
      variable = fc.Conditioned(fc.GetPersistentAsNumber("Backlight"))
      blend = true
      emissive = active
      passiveColor = COLOR_MOARdV_UnlitText
      activeColor = COLOR_ASET_SWITCHER_NAME_POSITIVECOLOR
      text = DOCK
    }

    TEXT_LABEL
    {
      name = Mode Text
      transform = Pos_5_TextObj
      fontSize = 3.5
      lineSpacing = 0.9
      transformOffset = 0.00391453, 0.002
      font = Liberation Sans
      style = Bold
      alignment = Center
      anchor = MiddleCenter
      variable = fc.Conditioned(fc.GetPersistentAsNumber("Backlight"))
      blend = true
      emissive = active
      passiveColor = COLOR_MOARdV_UnlitText
      activeColor = COLOR_ASET_SWITCHER_NAME_POSITIVECOLOR
      text = KOS
    }

    TEXT_LABEL
    {
      name = Mode Text
      transform = Pos_6_TextObj
      fontSize = 3.5
      lineSpacing = 0.9
      transformOffset = 0.00391453, 0
      font = Liberation Sans
      style = Bold
      alignment = Center
      anchor = MiddleCenter
      variable = fc.Conditioned(fc.GetPersistentAsNumber("Backlight"))
      blend = true
      emissive = active
      passiveColor = COLOR_MOARdV_UnlitText
      activeColor = COLOR_ASET_SWITCHER_NAME_POSITIVECOLOR
      text = ORBIT
    }

    ROTATION
    {
      name = Knob Rotator
      transform = KnobGrp
      startRotation = 0,-100,0
      endRotation = 0,100,0
      variable = fc.GetPersistentAsNumber("WARBIRD_NAV_MFD_SELECT")
      range = 0.0, 5.0
      blend = true
      longPath = true
    }

    COLOR_SHIFT
    {
      name = Knob Backlight
      transform = MarkObj, MarksObj
      variable = fc.Conditioned(fc.GetPersistentAsNumber("Backlight"))
      passiveColor = 0,0,0,255
      activeColor = COLOR_ASET_SWITCHER_BORDER_POSITIVECOLOR
      blend = true
    }

    TRIGGER_EVENT
    {
      name = Page Event
      event = fc.SetPersistent("CRT_STIT", "MAS_KGT_CRT_Standby")
      variable = fc.GetPersistent("WARBIRD_NAV_MFD_SELECT") == 0
    }

    TRIGGER_EVENT
    {
      name = Page Event
      event = fc.SetPersistent("CRT_STIT", "MAS_KGT_CRT_Nav")
      variable = fc.GetPersistent("WARBIRD_NAV_MFD_SELECT") == 1
    }

    TRIGGER_EVENT
    {
      name = Page Event
      event = fc.SetPersistent("CRT_STIT", "MAS_KGT_CRT_Target")
      variable = fc.GetPersistent("WARBIRD_NAV_MFD_SELECT") == 2
    }

    TRIGGER_EVENT
    {
      name = Page Event
      event = fc.SetPersistent("CRT_STIT", "MAS_KGT_CRT_Docking")
      variable = fc.GetPersistent("WARBIRD_NAV_MFD_SELECT") == 3
    }

    TRIGGER_EVENT
    {
      name = Page Event
      event = fc.SetPersistent("CRT_STIT", "MAS_KGT_CRT_KOS")
      variable = fc.GetPersistent("WARBIRD_NAV_MFD_SELECT") == 4
    }

    TRIGGER_EVENT
    {
      name = Page Event
      event = fc.SetPersistent("CRT_STIT", "MAS_KGT_CRT_OrbitDisplay")
      variable = fc.GetPersistent("WARBIRD_NAV_MFD_SELECT") == 5
    }

  }
}

MAS_PAGE
{
  name = MAS_KGT_CRT_Standby

  LINE_STRING
  {
    name = top text border
    position = 176, 192
    startColor = 0, 190, 0, 255
    startWidth = 3.5
    vertex = 0, 0
    vertex = 288, 0
  }
  LINE_STRING
  {
    name = top text border
    position = 176, 224
    startColor = 0, 190, 0, 255
    startWidth = 3.5
    vertex = 0, 0
    vertex = 288, 0
  }
  TEXT
  {
    position = 10.5, 9
    text = <=1=> <=0=> $#$ fc.GetPersistent("storedStrings1"); fc.GetPersistent("storedStrings7")
  }
  TEXT
  {
    position = 15, 6
    text = <=0=> $#$ fc.GetPersistent("storedStrings2")
  }
  TEXT
  {
    position = 15, 7
    textColor = 129, 190, 247, 255
    text = <=0=> $#$ fc.GetPersistent("storedStrings0")
  }
  TEXT
  {
    position = 2, 11
    text = Powered by MOARdV's Avionics Systems
  }
  TEXT
  {
    position = 13.5, 12
    textColor = 129, 190, 247, 255
    text = v <=0=>$#$ fc.MASVersion()
  }
}

MAS_PAGE
{
  name = MAS_KGT_CRT_Target

  TEXT
  {
    position = 0.5, 1
    text = ---------- Target Management ----------
  }
  TEXT
  {
    position = 0, 2
    text = == Root menu
    variable = fc.TargetType() == 0
  }
  TEXT
  {
    position = 0, 2
    text = == Current: <=0=> $#$ fc.TargetName()
    variable = fc.TargetType() ~= 0
  }
  MENU
  {
    position = 0, 3
    maxLines = 12

    upSoftkey = 0
    downSoftkey = 1
    enterSoftkey = 2
    //homeSoftkey = 3
    //endSoftkey = 4

    cursorPersistentName = CRT_STIT-MenuTargeting
    cursor = >
    cursorColor = 255, 255, 255, 255

    itemPositionShift = 2

    ITEM
    {
      activeText = Celestials
      selectEvent = fc.SetPersistent("CRT_STIT", "MAS_KGT_CRT_Target_Celestials")
    }
    ITEM
    {
      activeText = Vessels / Space Objects
      disabledText = Vessels / Space Objects
      disabledColor = 0, 127, 0, 255
      enabledVariable = fc.TargetVesselCount() > 0
      selectEvent = fc.SetPersistent("CRT_STIT", "MAS_KGT_CRT_Target_Vessels")
    }
    ITEM
    {
      activeText = Waypoints
      disabledText = Waypoints
      disabledColor = 127, 127, 127, 255
      enabledVariable = nav.WaypointCount() > 0
      selectEvent = fc.SetPersistent("CRT_STIT", "MAS_KGT_CRT_Target_Waypoints")
    }
    ITEM
    {
      activeText = Target Filters
      selectEvent = fc.SetPersistent("CRT_STIT", "MAS_KGT_CRT_Target_Filters")
    }
    ITEM
    {
      activeText = Clear Target
      disabledText = Clear Target
      disabledColor = 127, 127, 127, 255
      enabledVariable = fc.TargetType() > 0
      selectEvent = fc.ClearTarget()
    }
    ITEM
    {
      activeText = Reference Part
      selectEvent = fc.SetPersistent("CRT_STIT", "MAS_KGT_CRT_Target_ReferencePart")
    }
    ITEM
    {
      activeText = Undock
      disabledText = Not Docked
      disabledColor = 127, 127, 127, 255
      enabledVariable = fc.Docked()
      selectEvent = fc.Undock()
    }
    ITEM
    {
      activeText = Disarm Grapple
      passiveText = Arm Grapple
      activeVariable = fc.GrappleArmed()
      selectEvent = fc.ToggleGrappleArmed()
      disabledText = No Grapple
      disabledColor = 127, 127, 127, 255
      enabledVariable = fc.HasGrapple()
    }
    ITEM
    {
      activeText = Crew EVA
      selectEvent = fc.CrewEva(-1)
    }
  }
}

MAS_PAGE
{
  name = MAS_KGT_CRT_Target_Celestials

  softkey = 3, fc.SetPersistent("CRT_STIT", "MAS_KGT_CRT_Target")

  TEXT
  {
    position = 0.5, 1
    text = ---------- Target Management ----------
  }
  TEXT
  {
    position = 0, 2
    text = == Celestial Bodies
    variable = fc.TargetType() == 0
  }
  TEXT
  {
    position = 0, 2
    text = == Current: <=0=> $#$ fc.TargetName()
    variable = fc.TargetType() ~= 0
  }
  MENU
  {
    position = 0, 3
    maxLines = 12

    upSoftkey = 0
    downSoftkey = 1
    enterSoftkey = 2

    cursorPersistentName = CRT_STIT-MenuCelestials
    cursor = >
    cursorColor = 255, 255, 255, 255

    itemPositionShift = 2
    itemCount = fc.BodyCount()

    ITEM
    {
      activeText = <=0,-30:0=> <=1,4:SIP###0=>m $&$ fc.BodyName(%ITEMID%); fc.BodyDistance(%ITEMID%)
      activeColor = 0, 255, 0, 255
      activeVariable = fc.BodyTargetIndex() == %ITEMID%
      passiveColor = 0, 180, 0, 255
      disabledText = <=0,-30:0=> <=1,4:SIP###0=>m $&$ fc.BodyName(%ITEMID%); fc.BodyDistance(%ITEMID%)
      disabledColor = 0, 100, 0, 255
      enabledVariable = fc.CurrentBodyIndex() ~= %ITEMID%
      selectEvent = fc.SetBodyTarget(%ITEMID%)
    }
  }
}

MAS_PAGE
{
  name = MAS_KGT_CRT_Target_Vessels

  softkey = 3, fc.SetPersistent("CRT_STIT", "MAS_KGT_CRT_Target")

  TEXT
  {
    position = 0.5, 1
    text = ---------- Target Management ----------
  }
  TEXT
  {
    position = 0, 2
    text = == Target Vessels
    variable = fc.TargetType() == 0
  }
  TEXT
  {
    position = 0, 2
    text = == Current: <=0=> $#$ fc.TargetName()
    variable = fc.TargetType() ~= 0
  }
  MENU
  {
    position = 0, 3
    maxLines = 12

    upSoftkey = 0
    downSoftkey = 1
    enterSoftkey = 2

    cursorPersistentName = CRT_STIT-MenuVessels
    cursor = >
    cursorColor = 0, 255, 0, 255

    itemPositionShift = 2
    itemCount = fc.TargetVesselCount()

    ITEM
    {
      activeText = <=0,-30:0=> <=1,4:SIP###0=>m $&$ fc.TargetVesselName(%ITEMID%); fc.TargetVesselDistance(%ITEMID%)
      activeColor = 0, 255, 0, 255
      activeVariable = fc.TargetVesselIndex() == %ITEMID%
      passiveColor = 0, 180, 0, 255
      selectEvent = fc.SetTargetVessel(%ITEMID%)
    }
  }
}

MAS_PAGE
{
  name = MAS_KGT_CRT_Target_Waypoints

  softkey = 3, fc.SetPersistent("CRT_STIT", "MAS_KGT_CRT_Target")
  softkey = 4, nav.SetWaypoint(-1)

  TEXT
  {
    position = 0.5, 1
    text = ---------- Target Management ----------
  }
  TEXT
  {
    position = 0, 2
    text = == Waypoints
    variable = nav.WaypointActive() == 0
  }
  TEXT
  {
    position = 0, 2
    text = == Current: <=0=> $#$ nav.WaypointName(nav.GetWaypointIndex())
    variable = nav.WaypointActive() ~= 0
  }
  TEXT
  {
    position = 0, 14
    text = BRG: <=0:0.0=> / ALT: <=1:SIP###0=>m $#$ nav.WaypointBearing(-1); nav.WaypointAltitude(-1)
    variable = nav.WaypointActive() == 1
  }
  MENU
  {
    position = 0, 3
    maxLines = 12

    upSoftkey = 0
    downSoftkey = 1
    enterSoftkey = 2

    cursorPersistentName = CRT_STIT-MenuWaypoints
    cursor = >
    cursorColor = 0, 255, 0, 255

    itemPositionShift = 2
    itemCount = nav.WaypointCount()

    ITEM
    {
      activeText = <=0,-30:0=> <=1,4:SIP###0=>m $&$ nav.WaypointName(%ITEMID%); nav.WaypointDistance(%ITEMID%)
      activeColor = 0, 255, 0, 255
      activeVariable = nav.GetWaypointIndex() == %ITEMID%
      passiveColor = 0, 180, 0, 255
      disabledText = <=0,-30:0=> <=1,4:SIP###0=>m $&$ nav.WaypointName(%ITEMID%); nav.WaypointDistance(%ITEMID%)
      disabledColor = 0, 100, 0, 255
      enabledVariable = nav.GetWaypointIndex() ~= %ITEMID%
      selectEvent = nav.SetWaypoint(%ITEMID%)
    }
  }
}

MAS_PAGE
{
  name = MAS_KGT_CRT_Target_Filters

  softkey = 3, fc.SetPersistent("CRT_STIT", "MAS_KGT_CRT_Target")

  TEXT
  {
    position = 0.5, 1
    text = ---------- Target Management ----------
  }
  TEXT
  {
    position = 0, 2
    text = == Target Filters
    variable = fc.TargetType() == 0
  }
  TEXT
  {
    position = 0, 2
    text = == Current: <=0=> $#$ fc.TargetName()
    variable = fc.TargetType() ~= 0
  }
  MENU
  {
    position = 0, 3
    maxLines = 12

    upSoftkey = 0
    downSoftkey = 1
    enterSoftkey = 2

    cursorPersistentName = CRT_STIT-MenuFilters
    cursor = >
    cursorColor = 0, 255, 0, 255

    itemPositionShift = 2

    ITEM
    {
      activeText = Ship
      activeColor = 0, 255, 0, 255
      activeVariable = fc.GetTargetFilter(1)
      passiveColor = 0, 180, 0, 255
      selectEvent = fc.ToggleTargetFilter(1)
    }
    ITEM
    {
      activeText = Plane
      activeColor = 0, 255, 0, 255
      activeVariable = fc.GetTargetFilter(2)
      passiveColor = 0, 180, 0, 255
      selectEvent = fc.ToggleTargetFilter(2)
    }
    ITEM
    {
      activeText = Probe
      activeColor = 0, 255, 0, 255
      activeVariable = fc.GetTargetFilter(3)
      passiveColor = 0, 180, 0, 255
      selectEvent = fc.ToggleTargetFilter(3)
    }
    ITEM
    {
      activeText = Lander
      activeColor = 0, 255, 0, 255
      activeVariable = fc.GetTargetFilter(4)
      passiveColor = 0, 180, 0, 255
      selectEvent = fc.ToggleTargetFilter(4)
    }
    ITEM
    {
      activeText = Station
      activeColor = 0, 255, 0, 255
      activeVariable = fc.GetTargetFilter(5)
      passiveColor = 0, 180, 0, 255
      selectEvent = fc.ToggleTargetFilter(5)
    }
    ITEM
    {
      activeText = Relay
      activeColor = 0, 255, 0, 255
      activeVariable = fc.GetTargetFilter(6)
      passiveColor = 0, 180, 0, 255
      selectEvent = fc.ToggleTargetFilter(6)
    }
    ITEM
    {
      activeText = Rover
      activeColor = 0, 255, 0, 255
      activeVariable = fc.GetTargetFilter(7)
      passiveColor = 0, 180, 0, 255
      selectEvent = fc.ToggleTargetFilter(7)
    }
    ITEM
    {
      activeText = Base
      activeColor = 0, 255, 0, 255
      activeVariable = fc.GetTargetFilter(8)
      passiveColor = 0, 180, 0, 255
      selectEvent = fc.ToggleTargetFilter(8)
    }
    ITEM
    {
      activeText = EVA
      activeColor = 0, 255, 0, 255
      activeVariable = fc.GetTargetFilter(9)
      passiveColor = 0, 180, 0, 255
      selectEvent = fc.ToggleTargetFilter(9)
    }
    ITEM
    {
      activeText = Flag
      activeColor = 0, 255, 0, 255
      activeVariable = fc.GetTargetFilter(10)
      passiveColor = 0, 180, 0, 255
      selectEvent = fc.ToggleTargetFilter(10)
    }
    ITEM
    {
      activeText = Debris
      activeColor = 0, 255, 0, 255
      activeVariable = fc.GetTargetFilter(11)
      passiveColor = 0, 180, 0, 255
      selectEvent = fc.ToggleTargetFilter(11)
    }
    ITEM
    {
      activeText = Space Object
      activeColor = 0, 255, 0, 255
      activeVariable = fc.GetTargetFilter(12)
      passiveColor = 0, 180, 0, 255
      selectEvent = fc.ToggleTargetFilter(12)
    }
    ITEM
    {
      activeText = Unknown
      activeColor = 0, 255, 0, 255
      activeVariable = fc.GetTargetFilter(13)
      passiveColor = 0, 180, 0, 255
      selectEvent = fc.ToggleTargetFilter(13)
    }
  }
}

MAS_PAGE
{
  name = MAS_KGT_CRT_Target_ReferencePart

  softkey = 3, fc.SetPersistent("CRT_STIT", "MAS_KGT_CRT_Target")

  TEXT
  {
    position = 0.5, 1
    text = ---------- Target Management ----------
  }
  TEXT
  {
    position = 0, 2
    text = == Select Reference
  }
  MENU
  {
    position = 0, 3
    maxLines = 12

    upSoftkey = 0
    downSoftkey = 1
    enterSoftkey = 2
    //homeSoftkey = 3
    //endSoftkey = 4

    cursorPersistentName = CRT_STIT-MenuReference
    cursor = >
    cursorColor = 0, 255, 0, 255

    itemPositionShift = 2

    ITEM
    {
      activeText = Pod
      activeColor = 0, 255, 0, 255
      activeVariable = fc.GetPodIsReference()
      passiveColor = 0, 180, 0, 255
      selectEvent = fc.SetPodToReference()
    }
    ITEM
    {
      activeText = Dock
      activeColor = 0, 255, 0, 255
      activeVariable = fc.GetDockIsReference()
      passiveColor = 0, 180, 0, 255
      selectEvent = fc.SetDockToReference()
      disabledText = No Dock
      disabledColor = 0, 100, 0, 255
      enabledVariable = fc.HasDock()
    }
    ITEM
    {
      activeText = Grapple
      activeColor = 0, 255, 0, 255
      activeVariable = fc.GetGrappleIsReference()
      passiveColor = 0, 180, 0, 255
      selectEvent = fc.SetGrappleToReference()
      disabledText = No Grapple
      disabledColor = 0, 100, 0, 255
      enabledVariable = fc.HasGrapple()
    }
  }
}

MAS_PAGE
{
  name = MAS_KGT_CRT_Docking

  CAMERA
  {
    name = Camera
    position = 0,0
    //size = 640, 640
	size = 1280, 1280
    camera = fc.ActiveDockingPortCamera()

    shader = MOARdV/MonochromeNoise
    properties = _Gain:1.1;_NoiseOffset:fc.RandomNormal(0, 0.135);_Blend:0.95 - fc.Random() * 0.10;_ChannelG:1;_ChannelR:0.118;_ChannelB:0.118
    texture = ASET/ASET_Props/MFDs/ScreenPlates/noise
  }
  IMAGE
  {
    texture = ASET/ASET_Props/MFDs/ALCORMFD40x20/cross
    position = 0, 0
    size = 640, 640
  }

  TEXT
  {
    name = target info
    position = 0,1
    text = TARGET<=0=>: [#FFFF00FF]<=1=> $#$ fc.Select(fc.TargetType() == 3, " BODY", ""); fc.TargetName()
    variable = fc.TargetType()
  }
  TEXT
  {
    name = dock camera caption
    position = 28, 1
    text = DOCKPORT CAM
    variable = fc.ActiveDockingPortCameraIndex() >= 0
  }

  TEXT
  {
    name = upper captions
    position = 0,2
    text = APPR.:$$$ DIST:$$$R.VEL:$$$R.INC:
    variable = fc.TargetType()
  }
  TEXT
  {
    name = upper values
    position = 7, 2
    text = <=0,7:SIP##0.0=>m/s $#$ fc.ApproachSpeed()$$$<=0,7:SIP##0.0=>m $#$ fc.TargetDistance()$$$<=0,7:SIP##0.0=>m/s $#$ fc.TargetSpeed()$$$<=0,7:0.000=>� $#$ fc.TargetRelativeInclination()
    variable = fc.TargetType()
  }
  TEXT
  {
    name = docking alignment
    position = 26, 2
    text = R.ANGLES$$$<=0=>X:$#$ fc.Select(fc.Abs(fc.YawDockingAlignment()) < 1, "", "[#ff0000]")$$$<=0=>Y:$#$fc.Select(fc.Abs(fc.PitchDockingAlignment()) < 1, "", "[#ff0000]")
    variable = fc.TargetType() == 2
  }
  TEXT
  {
    name = docking alignment
    position = 29, 3
    text = <=0,6:0.0=>�$#$fc.YawDockingAlignment()$$$<=0,6:0.0=>�$#$fc.PitchDockingAlignment()
    variable = fc.TargetType() == 2
  }

  TEXT
  {
    name = Reference Dock
    position = 4, 6
    text = Please select a docking port as
    variable = 1 - fc.GetDockIsReference()
  }

  TEXT
  {
    name = Reference Dock
    position = 7, 7
    text = reference part in target
    variable = 1 - fc.GetDockIsReference()
  }

  TEXT
  {
    name = docking ready
    position = 1, 6
    text = READY FOR$$$DOCKING
    variable = fc.GetPersistentAsNumber("ALCOR_FINALAPPROACH")
  }

  TEXT
  {
    name = Reference Dock
    position = 10, 8
    text = management menu.
    variable = 1 - fc.GetDockIsReference()
  }

  TEXT
  {
    name = appr angle
    position = 1, 9
    text = WRONG ANGLE
    variable = fc.Abs(fc.YawDockingAlignment()) > 1 or fc.Abs(fc.PitchDockingAlignment()) > 1
  }

  TEXT
  {
    name = no target
    position = 16, 10
    text = NO TARGET
    variable = fc.TargetType() == 0
  }
  TEXT
  {
    name = appr speed
    position = 1, 10
    text = TOO FAST
    variable = fc.TargetType() > 0 and fc.TargetSpeed() > 2.5 and fc.TargetDistance() < 15
  }

  TEXT
  {
    name = docking markers a
    position = 17.5, 8.5
    text = [@x-<=0:0=>][@y-<=0:0=>]+   [@x<=0=>][@y-<=0=>]+ $#$ fc.Min(fc.TargetAngle(), 100)
    variable = fc.TargetType()
  }
  TEXT
  {
    name = docking markers b
    position = 17.5, 10.5
    text = [@x-<=0:0=>][@y<=0:0=>]+   [@x<=0:0=>][@y<=0:0=>]+ $#$ fc.Min(fc.TargetAngle(), 100)
    variable = fc.TargetType()
  }

  TEXT
  {
    name = target track fixed texts a
    position = 0,13
    text = REL.VEL$$$X:$$$Y:$$$Z:
    variable = fc.TargetType() == 1 or fc.TargetType() == 2 or fc.TargetType() == 5
  }
  TEXT
  {
    name = target track fixed texts b
    position = 26,13
    text = REL.DIST$$$X:$$$Y:$$$Z:
    variable = fc.TargetType() == 1 or fc.TargetType() == 2 or fc.TargetType() == 5
  }

  TEXT
  {
    name = target displacement
    position = 28,14
    text = <=0,8:SIP##0.0=>m $#$ fc.TargetDistanceX() $$$<=0,8:SIP##0.0=>m $#$ fc.TargetDistanceY()$$$<=0,8:SIP##0.0=>m $#$ fc.TargetDistanceZ()
    variable = fc.TargetType() == 1 or fc.TargetType() == 2 or fc.TargetType() == 5
  }

  TEXT
  {
    name = target speed
    position = 2,14
    text = <=0,7:SIP##0.0=>m/s $#$ fc.TargetVelocityX() $$$<=0,7:SIP##0.0=>m/s $#$ fc.TargetVelocityY()$$$<=0,7:SIP##0.0=>m/s $#$ fc.TargetVelocityZ()
    variable = fc.TargetType() == 1 or fc.TargetType() == 2 or fc.TargetType() == 5
  }

  TEXT
  {
    name = lower row
    position = 0, 17
    text =________________________________________$$$SAS:<=0,6=>| RCS:<=1,6=>| $#$ fc.Select(fc.GetSAS(), "ACTIVE", "OFF   "); fc.Select(fc.GetRCS(), "ACTIVE", "OFF   ")
  }
  TEXT
  {
    name = monoprop
    position = 24,18
    text = <=0:###0.00=> $#$ fc.ResourceStageCurrent("MonoPropellant")
  }
}

MAS_PAGE
{
  name = MAS_KGT_CRT_KOS

	RPM_MODULE
	{
		name = kOS Prop Monitor
		moduleName = kOSMonitor
		buttonClickMethod = ButtonProcessor
		position = 0, 0
		size = 640, 640
		variable = fc.AssemblyLoaded("kOSPropMonitor")
	}

	TEXT
	{
		name = kOS Prop Monitor Content
		textmethod = kOSMonitor:ContentProcessor
	}
	TEXT
	{
		name = Missing Assembly
		textColor = 255, 255, 0, 255
		text = kOS Prop Monitor$$$Not Detected
		position = 9,9

		variable = 1 - fc.AssemblyLoaded("kOSPropMonitor")
	}
}

MAS_PAGE
{
  name = MAS_KGT_CRT_OrbitDisplay

  ORBIT_DISPLAY
  {
    name = Orbital Schematic

    position = 0, 0
    size = 640, 640

    vertexCount = 128
    orbitWidth = 2
    bodyWidth = 2

    vesselStartColor = 0, 255, 0, 255
    vesselEndColor = 0, 255, 0, 128

    targetStartColor = 20, 180, 20, 255
    targetEndColor = 20, 180, 20, 128

    maneuverStartColor = 80, 180, 80, 255
    maneuverEndColor = 80, 180, 80, 128
    variable = fc.Conditioned(1)
  }

  TEXT
  {
    name = body
    position = 0, 1
    text = [hw]BODY:<=0=> $#$ fc.BodyName(fc.CurrentBodyIndex())
  }
  TEXT
  {
    name = target statics
    position = 30, 1
    text = [hw]TARGET: <=0=> $#$ fc.TargetName() $$$[hw]VEL:$$$[hw]ALT:
    variable = fc.TargetType()
  }

  TEXT
  {
    name = vel/alt static
    position = 0, 2
    text = [hw]VEL:$$$[hw]ALT:
  }
  TEXT
  {
    name = vel/alt dynamic
    position = 2,2
    text = [hw]<=0,7:SIP##0.0=>m/s $#$ fc.OrbitSpeed() $$$[hw]<=0,7:SIP##0.0=>m $#$ fc.Altitude()
  }
  TEXT
  {
    name = tgt vel/alt dynamic
    position = 32,2
    text = [hw]<=0,7:SIP##0.0=>m/s $#$ fc.TargetOrbitSpeed() $$$[hw]<=0,7:SIP##0.0=>m $#$ fc.TargetAltitude()
    variable = fc.TargetType()
  }

  TEXT
  {
    name = row4567 static
    position = 0, 4
    text = [hw]ApA:$$$[hw]PeA:$$$[hw]INC:$$$[hw]ECC:
    variable = 1 - fc.VesselLanded()
  }
  TEXT
  {
    name = row4 Ap
    position = 2, 4
    text = [hw]<=0,7:SIP##0.0=>m $#$ fc.Apoapsis()
    variable = 1 - fc.VesselLanded()
  }

  TEXT
  {
    name = row5 Pe
    position = 2, 5
    text = [hw]<=0,7:SIP##0.0=>m $#$ fc.Periapsis()
    variable = 1 - fc.VesselLanded()
  }

  TEXT
  {
    name = row6 Inc
    position = 2, 6
    text = [hw]<=0,7:0.000=>� $#$ fc.Inclination()
    variable = 1 - fc.VesselLanded()
  }

  TEXT
  {
    name = row7 Ecc
    position = 2, 7
    text = [hw]<=0,7:0.000=> $#$ fc.Eccentricity()
    variable = 1 - fc.VesselLanded()
  }

  TEXT
  {
    name = tgt row4567 static
    position = 30, 4
    text = [hw]ApA:$$$[hw]PeA:$$$[hw]INC:$$$[hw]ECC:
    variable = fc.TargetType()
  }
  TEXT
  {
    name = tgt row4 Ap
    position = 32, 4
    text = [hw]<=0,7:SIP##0.0=>m $#$ fc.TargetApoapsis()
    variable = fc.TargetType()
  }

  TEXT
  {
    name = tgt row5 Pe
    position = 32, 5
    text = [hw]<=0,7:SIP##0.0=>m $#$ fc.TargetPeriapsis()
    variable = fc.TargetType()
  }

  TEXT
  {
    name = tgt row6 Inc
    position = 32, 6
    text = [hw]<=0,7:0.000=>� $#$ fc.TargetInclination()
    variable = fc.TargetType()
  }

  TEXT
  {
    name = tgt row7 Ecc
    position = 32, 7
    text = [hw]<=0,7:0.000=> $#$ fc.TargetEccentricity()
    variable = fc.TargetType()
  }

  TEXT
  {
    name = tgt angle statics
    position = 27.5,8
    text = [hw]   R.VEL:$$$[hw]   R.INC:$$$[hw]    T.AN:$$$[hw]    T.DN:$$$[hw]ClstAprt:$$$[hw] ClstApr:
    variable = fc.TargetType()
  }

  TEXT
  {
    name = tgt mnvr static
    position = 27.5,14
    text = [hw] M.ClApr:$$$[hw] M.ClstT:
    variable = fc.TargetType() * fc.ManeuverNodeExists()
  }

  TEXT
  {
    name = rvel
    position = 32,8
    text = [hw]<=0,7:SIP##0.0=>m/s $#$ fc.TargetSpeed()
    variable = fc.TargetType()
  }

  TEXT
  {
    name = rinc
    position = 32,9
    text = [hw]<=0,7:0.000=>� $#$ fc.TargetRelativeInclination()
    variable = fc.TargetType()
  }

  TEXT
  {
    name = t.an
    position = 32,10
    text = [hw]<=0:MET-dd:hh:mm:ss.f=> $#$ fc.TimeToANTarget()
    variable = fc.TargetType()
  }

  TEXT
  {
    name = t.dn
    position = 32,11
    text = [hw]<=0:MET-dd:hh:mm:ss.f=> $#$ fc.TimeToDNTarget()
    variable = fc.TargetType()
  }

  TEXT
  {
    name = t.closest
    position = 32,12
    text = [hw]<=0:MET-dd:hh:mm:ss.f=> $#$ fc.TargetClosestApproachTime()
    variable = fc.TargetType()
  }

  TEXT
  {
    name = closest dist
    position = 32,13
    text = [hw]<=0,7:SIP##0.0=>m $#$ fc.TargetClosestApproachDistance()
    variable = fc.TargetType()
  }

  TEXT
  {
    name = Maneuver closest dist
    position = 34,14
    text = [hw]<=0,7:SIP##0.0=>m $#$ fc.ManeuverNodeTargetClosestApproachDistance()
    variable = fc.TargetType() * fc.ManeuverNodeExists()
  }

  TEXT
  {
    name = Maneuver closest time
    position = 34,15
    text = [hw]<=0:MET-dd:hh:mm:ss.f=> $#$ fc.ManeuverNodeTargetClosestApproachTime()
    variable = fc.TargetType() * fc.ManeuverNodeExists()
  }

  TEXT
  {
    name = phase angle statics
    position = 0,8
    text = [hw]PHASE ANGLE:
    variable = transfer.TimeUntilPhaseAngle() ~= 0
  }
  TEXT
  {
    name = phase angle
    position = 6, 8
    text = [hw]<=0:0.00=>� $#$ transfer.RelativePhaseAngle()
    variable = transfer.TimeUntilPhaseAngle() ~= 0
  }

  TEXT
  {
    name = maneuver inc
    position = 9, 13
    text = [hw]NoINC:<=0:0.00=>� $#$ fc.ManeuverNodeInc()
    variable = fc.ManeuverNodeExists()
  }

  TEXT
  {
    name = maneuver
    position = 0, 9
    text = [hw]NodeT:[#FFFF0088]<=0,14:MET+dd:hh:mm:ss=>[#FFFFFF88] $#$ fc.ManeuverNodeTime() $$$ [hw]V:[#FFFF0088]<=0,8:0.0=>[#FFFFFF88] $#$ fc.ManeuverNodeDV() $$$ [hw]NoAP:[#FFFF0088]<=0,7:SIP##0.0=>m $#$ fc.ManeuverNodeAp() $$$ [hw]NoPE:[#FFFF0088]<=0,7:SIP##0.0=>m $#$ fc.ManeuverNodePe() $$$ [hw]NoRINC:<=0:0.00=>� $#$ fc.ManeuverNodeRelativeInclination() $$$ [hw]NoRVEL:<=0,7:SIP##0.0=>m/s $#$ fc.ManeuverNodeTargetClosestApproachSpeed() $$$ [hw]BurnT:[#81BEF788]<=0:METhh:mm:ss=> $#$ fc.ManeuverNodeBurnTime()
    variable = fc.ManeuverNodeExists()
  }

  TEXT
  {
    name = Bottom static a
    position = 1, 16
    textColor = 255, 255, 255, 235
    font = InconsolataGo
    text = [hw]ApT:$$$[hw]PeT:$$$[hw] OP:
    variable = 1 - fc.VesselLanded()
  }
  TEXT
  {
    name = ApT
    position = 3,16
    text = [hw]<=0:MET-dd:hh:mm:ss.f=> $#$ fc.TimeToAp()
    variable = 1 - fc.VesselLanded()
  }
  TEXT
  {
    name = AN
    position = 33,16
    text = [hw]<=0:MET-dd:hh:mm:ss.f=> $#$ fc.TimeToANEq()
    variable = 1 - fc.VesselLanded()
  }
  TEXT
  {
    name = Bottom static b
    position = 31, 16
    text = [hw]AN:$$$[hw]DN:
    variable = 1 - fc.VesselLanded()
  }

  TEXT
  {
    name = PeT
    position = 3,17
    text = [hw]<=0:MET-dd:hh:mm:ss.f=> $#$ fc.TimeToPe()
    variable = 1 - fc.VesselLanded()
  }
  TEXT
  {
    name = DN
    position = 33,17
    text = [hw]<=0:MET-dd:hh:mm:ss.f=> $#$ fc.TimeToDNEq()
    variable = 1 - fc.VesselLanded()
  }

  TEXT
  {
    name = OP
    position = 3,18
    text = [hw]<=0:MET-dd:hh:mm:ss.f=> $#$ fc.OrbitPeriod()
    variable = 1 - fc.VesselLanded()
  }
}

MAS_PAGE
{
  name = MAS_KGT_CRT_Nav

  RPM_MODULE
  {
    name = Legacy SCANsat display

    moduleName = JSISCANsatRPM

    renderMethod = MapRenderer
    buttonClickMethod = ButtonProcessor
    pageActiveMethod = PageActive

    position = 0, 0
    size = 640, 640

    variable = fc.AssemblyLoaded("SCANsat")
  }

  TEXT
  {
    name = row1
    position = 0, 1
    text = BODY: <=0=>$#$ fc.BodyName(fc.CurrentBodyIndex())
  }

  TEXT
  {
    name = row2 static
    position = 0, 2
    text = VEL:                ALT:
  }
  TEXT
  {
    name = row2 vel
    position = 9, 2
    text = <=0,6:SIP##0.0=>m/s $#$ fc.OrbitSpeed()
  }
  TEXT
  {
    name = row2 alt
    position = 25, 2
    text = <=0,6:SIP##0.0=>m $#$ fc.Altitude()
  }

  TEXT
  {
    name = row3456 static
    position = 0, 3
    text = ApA:$$$PeA:$$$INC:$$$ECC:
    variable = 1 - fc.VesselLanded()
  }
  TEXT
  {
    name = row3 Ap
    position = 6, 3
    text = <=0,7:SIP##0.0=>m $#$ fc.Apoapsis()
    variable = 1 - fc.VesselLanded()
  }

  TEXT
  {
    name = row4 Pe
    position = 6, 4
    text = <=0,7:SIP##0.0=>m $#$ fc.Periapsis()
    variable = 1 - fc.VesselLanded()
  }

  TEXT
  {
    name = row5 Inc
    position = 7, 5
    text = <=0,7:0.000=>� $#$ fc.Inclination()
    variable = 1 - fc.VesselLanded()
  }

  TEXT
  {
    name = row6 Ecc
    position = 7, 6
    text = <=0,7:0.000=> $#$ fc.Eccentricity()
    variable = 1 - fc.VesselLanded()
  }

  TEXT
  {
    name = Bottom static a
    position = 1, 16
    text = ApT:$$$PeT:$$$ OP:
    variable = 1 - fc.VesselLanded()
  }
  TEXT
  {
    name = ApT
    position = 5,16
    text = <=0:MET-dd:hh:mm:ss.f=> $#$ fc.TimeToAp()
    variable = 1 - fc.VesselLanded()
  }
  TEXT
  {
    name = AN
    position = 24,16
    text = <=0:MET-dd:hh:mm:ss.f=> $#$ fc.TimeToANEq()
    variable = 1 - fc.VesselLanded()
  }
  TEXT
  {
    name = Bottom static b
    position = 21, 16
    text = AN:$$$DN:
    variable = 1 - fc.VesselLanded()
  }

  TEXT
  {
    name = PeT
    position = 5,17
    text = <=0:MET-dd:hh:mm:ss.f=> $#$ fc.TimeToPe()
    variable = 1 - fc.VesselLanded()
  }
  TEXT
  {
    name = DN
    position = 24,17
    text = <=0:MET-dd:hh:mm:ss.f=> $#$ fc.TimeToDNEq()
    variable = 1 - fc.VesselLanded()
  }

  TEXT
  {
    name = OP
    position = 5,18
    text = <=0:MET-dd:hh:mm:ss.f=> $#$ fc.OrbitPeriod()
    variable = 1 - fc.VesselLanded()
  }
}

@PROP[MAS_KGT_Warbird_CRT_MFD_NAV_40x15_Stitched]:NEEDS[kOSPropMonitor&AvionicsSystems]
{
	MODULE
	{
		name = kOSMonitor
		template = kPM/Library/Terminals/terminal40x20.txt
		buttonEmptyLabel = LABEL
		flagEmptyLabel = FLAG
		consoleWidth = 80
		consoleHeight = 19
		textTint = [#00ff00ff]
		coloredTextTint = [#00ff00]
		textTintColored = [#08ff08]
		textTintUnpowered = [#ffffff3e]
		keyboardInactiveTint = [#002D4A00]
	}
}

@PROP[MAS_KGT_Warbird_CRT_MFD_NAV_40x15_Stitched]:NEEDS[SCANsat&AvionicsSystems]
{
	MODULE
	{
		name = JSISCANsatRPM
		buttonUp = 0
		buttonDown = 1
		buttonEnter = 2
		buttonEsc = 3
		buttonHome = 4
		buttonRight = 5
		buttonLeft = 6
		buttonR9 = 7
		buttonR10 = 8
		mapDivider = 2
		resourceInterpolation = 4
		zoomModifier = 2.0
		iconPixelSize = 32
		iconShadowShift = 2,2
		scaleBarPosition = 16,144
		scaleBar = ASET/ASET_Props/MFDs/scalebar
		scaleLabels = ASET/ASET_Props/MFDs/scaleLabels
	}
}